/* (zybooks 5.16 LAB: Adjust list by normalizing)
For this program, adjust the values by dividing all values by the largest value. 
The input begins with an integer indicating the number of floating-point values that 
follow. Assume that the list will always contain fewer than 20 floating-point values. */

import java.util.Scanner; 
public class LabProgram {
   public static void main(String[] args) {
     Scanner scnr = new Scanner(System.in);
      double[] userVals = new double [19];  
      int numElements = scnr.nextInt();
      double max= 0;
      int i;
      
      for (i =0; i < numElements; ++i) {
         userVals[i] = scnr.nextDouble();
         if (userVals[i]>max){
             max = userVals[i];
          }
      }      
       for (i =0; i < numElements; ++i) {
         System.out.printf("%.2f ", (userVals[i] / max));
      }                  
     System.out.println();
   }
}

/* (zybooks 5.17 LAB: Word frequencies) 
Write a program that reads a list of words. Then, the program outputs those words 
and their frequencies. The input begins with an integer indicating the number of 
words that follow. Assume that the list will always contain fewer than 20 words. */

import java.util.Scanner; 
public class LabProgram {
   public static void main(String[] args) {
      Scanner scnr = new Scanner(System.in);
      int numElements = scnr.nextInt();
      String [] userVals = new String [20];
      int i, j;
   
      for (i =0; i < numElements; ++i) {
         userVals[i] = scnr.next();
      }      
      for (i = 0; i < numElements; ++i) {
         int count = 0;
         for (j = 0; j < numElements; ++j) {
            if (userVals[i].equals(userVals[j])){
            ++count;
            }
         }
         System.out.println(userVals[i] + " - " + count);
      }
   }
}
